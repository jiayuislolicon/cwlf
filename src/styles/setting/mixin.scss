$breakpoints: (
  "mobile-l": (
    min-width: 375px,
  ),
  "pad": (
    min-width: 768px,
  ),
  "desktop": (
    min-width: 1024px,
  ),
  "desktop-w": (
    min-width: 1280px,
  ),
  "desktop-l": (
    min-width: 1366px,
  ),
  "desktop-hd": (
    min-width: 1440px,
  ),
  "desktop-wild": (
    min-width: 1680px,
  ),
  "desktop-fullhd": (
    min-width: 1920px,
  ),
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin rwd($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    +"Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// clearfix
@mixin clearFix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    display: block;
    clear: both;
    height: 1px;
    margin-top: -1px;
    visibility: hidden;
  }

  & {
    *zoom: 1;
  }
}

// Mixin to set transition
@mixin transition($name, $time, $delay) {
  transition: $name $time $cubic $delay;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

/* ipad */
@include rwd(pad) {
}

/* desktop */
@include rwd(desktop) {
}

/* desktop wide */
@include rwd(desktop-w) {
}

/* desktop large */
@include rwd(desktop-l) {
}

/* desktop HD */
@include rwd(desktop-hd) {
}

/* desktop wild */
@include rwd(desktop-wild) {
}

/* desktop full HD */
@include rwd(desktop-fullhd) {
}

/* iPad Pro portrait */
@media only screen and (min-device-width: 2048px) and (max-device-width: 2732px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: portrait) {
}

/* iPad Pro landscape */
@media only screen and (min-device-width: 2048px) and (max-device-width: 2732px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
}
